'use client';

import clsx from 'clsx';
import { usePathname, useRouter } from 'next/navigation';
import { useMemo, useState } from 'react';

import IconTriangle from '@/components/Icon/IconTriangle';
import MainPanel from '@/components/MainPanel';
import SubPanel from '@/components/SubPanel';
import Tab from '@/components/Tab';
import { useResponsive } from '@/hooks/useResponsive';

import style from './layout.module.scss';

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// };
const eventInfo = {
  eventName: 'Nagano Camp',
  members: ['たろ', 'そめ', 'ハマ', '黒田', 'フラ', 'りゅー'],
  startDate: '2022-10-01',
  endDate: '2022-10-03',
  meetingPlace: '池袋駅',
  dissolutionPlace: '池袋駅',
  message: 'スウェーデントーチやりたい',
};

const PageLayout = ({ children }: { children: React.ReactNode }) => {
  const router = useRouter();
  const pathName = usePathname();

  const [isOpen, setIsOpen] = useState<boolean>(false);
  const { isSp } = useResponsive();

  const onTabChange = (index: number) => {
    switch (index) {
      case 0:
        router.push('/sample/item');
        break;
      case 1:
        router.push('/sample/expense');
        break;
      case 2:
        router.push('/sample/memo');
        break;
      default:
        break;
    }
  };

  const tabIndex = useMemo(() => {
    switch (pathName) {
      case '/sample/item':
        return 0;
      case '/sample/expense':
      case '/sample/expense/seisan':
        return 1;
      case '/sample/memo':
        return 2;
      default:
        return 0;
    }
  }, [pathName]);

  const onClick = () => {
    if (!isSp) return;
    setIsOpen(!isOpen);
  };

  return (
    <div className={style['page-component']}>
      <div className={clsx(style['sub'], isOpen && style['-open'])}>
        <SubPanel isOpen={isSp ? isOpen : true} eventInfo={eventInfo} />
        <span
          className={clsx(style['icon'], isOpen && style['-reverse'])}
          onClick={onClick}>
          <IconTriangle />
        </span>
      </div>
      <div className={style['main']}>
        <div className={style['tab']}>
          <Tab onChange={onTabChange} defaultIndex={tabIndex} />
        </div>
        <div className={style['panel']}>
          <MainPanel>{children}</MainPanel>
        </div>
      </div>
    </div>
  );
};

export default PageLayout;
